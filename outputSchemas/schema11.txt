
ex:optionsDefinition_Shape a sh:NodeShape;
  sh:targetClass :optionsDefinition;
  sh:property [
    sh:path :arrowParens;
    sh:xone (
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
    );
  ];
  sh:property [
    sh:path bracketSpacing;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path cursorOffset;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :endOfLine;
    sh:xone (
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
    );
  ];
  sh:property [
    sh:path filepath;
    sh:datatype xsd:string;
  ];
  sh:property [
    sh:path :htmlWhitespaceSensitivity;
    sh:xone (
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
    );
  ];
  sh:property [
    sh:path insertPragma;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path jsxBracketSameLine;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path jsxSingleQuote;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :parser;
    sh:xone (
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
    );
  ];
  sh:property [
    sh:path ex:pluginSearchDirs;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
      sh:datatype xsd:string;
    ];
  ];
  sh:property [
    sh:path ex:plugins;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
      sh:datatype xsd:string;
    ];
  ];
  sh:property [
    sh:path printWidth;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :proseWrap;
    sh:xone (
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
    );
  ];
  sh:property [
    sh:path :quoteProps;
    sh:xone (
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
    );
  ];
  sh:property [
    sh:path rangeEnd;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path rangeStart;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path requirePragma;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path semi;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path singleQuote;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path tabWidth;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :trailingComma;
    sh:xone (
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
      [
        sh:property [
          sh:path ex:undefined;
          sh:in (undefined)
        ];
      ]
    );
  ];
  sh:property [
    sh:path useTabs;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path vueIndentScriptAndStyle;
    sh:datatype xsd:boolean;
  ];

ex:overridesDefinition_Shape a sh:NodeShape;
  sh:targetClass :overridesDefinition;
  sh:property [
    sh:path ex:overrides;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
      sh:datatype ex:overrides1_Shape;
    ];
  ];

ex:JS_id a sh:NodeShape;
  sh:targetClass :JS_id;
  sh:xone (
    [
      sh:property [
        sh:node ex:obj1_Shape;
      ];
    ]
    [
      sh:and (
        ex:optionsDefinition_shape
        ex:overridesDefinition_shape
      );
    ]
    [
      sh:property [
        sh:datatype xsd:string;
      ];
    ]
  );

ex:overrides1_Shape a sh:NodeShape;
  sh:targetClass :overrides1;
  sh:property [
    sh:path :files;
    sh:xone (
      [
        sh:property [
          sh:datatype xsd:string;
        ];
      ]
      [
        sh:property [
          sh:path ex:oneOf;
          sh:node dash:ListShape;
          sh:property [
            sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
            sh:datatype xsd:string;
          ];
        ];
      ]
      [
        sh:property [
          sh:path items;
          sh:datatype xsd:string;
        ];
      ]
    );
  ];
  sh:property [
    sh:path :excludeFiles;
    sh:xone (
      [
        sh:property [
          sh:datatype xsd:string;
        ];
      ]
      [
        sh:property [
          sh:path ex:oneOf;
          sh:node dash:ListShape;
          sh:property [
            sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
            sh:datatype xsd:string;
          ];
        ];
      ]
      [
        sh:property [
          sh:path items;
          sh:datatype xsd:string;
        ];
      ]
    );
  ];
  sh:property [
    sh:path options;
    sh:node ex:options_Shape;
  ];

ex:obj1_Shape a sh:NodeShape;
  sh:targetClass :obj1;
  sh:and (
    ex:optionsDefinition_shape
    ex:overridesDefinition_shape
  );

ex:options_Shape a sh:NodeShape;
  sh:targetClass :options;
