
ex:optionsDefinition_Shape a sh:NodeShape;
  sh:targetClass :optionsDefinition;
  sh:property [
    sh:path :arrowParens;
    sh:xone (
      [
        sh:property [
          sh:in (always)
        ];
      ]
      [
        sh:property [
          sh:in (avoid)
        ];
      ]
    );
  ];
  sh:property [
    sh:path :bracketSpacing;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :cursorOffset;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :endOfLine;
    sh:xone (
      [
        sh:property [
          sh:in (lf)
        ];
      ]
      [
        sh:property [
          sh:in (crlf)
        ];
      ]
      [
        sh:property [
          sh:in (cr)
        ];
      ]
      [
        sh:property [
          sh:in (auto)
        ];
      ]
    );
  ];
  sh:property [
    sh:path :filepath;
    sh:datatype xsd:string;
  ];
  sh:property [
    sh:path :htmlWhitespaceSensitivity;
    sh:xone (
      [
        sh:property [
          sh:in (css)
        ];
      ]
      [
        sh:property [
          sh:in (strict)
        ];
      ]
      [
        sh:property [
          sh:in (ignore)
        ];
      ]
    );
  ];
  sh:property [
    sh:path :insertPragma;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :jsxBracketSameLine;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :jsxSingleQuote;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :parser;
    sh:xone (
      [
        sh:property [
          sh:in (flow)
        ];
      ]
      [
        sh:property [
          sh:in (babel)
        ];
      ]
      [
        sh:property [
          sh:in (babel-flow)
        ];
      ]
      [
        sh:property [
          sh:in (babel-ts)
        ];
      ]
      [
        sh:property [
          sh:in (typescript)
        ];
      ]
      [
        sh:property [
          sh:in (css)
        ];
      ]
      [
        sh:property [
          sh:in (less)
        ];
      ]
      [
        sh:property [
          sh:in (scss)
        ];
      ]
      [
        sh:property [
          sh:in (json)
        ];
      ]
      [
        sh:property [
          sh:in (json5)
        ];
      ]
      [
        sh:property [
          sh:in (json-stringify)
        ];
      ]
      [
        sh:property [
          sh:in (graphql)
        ];
      ]
      [
        sh:property [
          sh:in (markdown)
        ];
      ]
      [
        sh:property [
          sh:in (mdx)
        ];
      ]
      [
        sh:property [
          sh:in (vue)
        ];
      ]
      [
        sh:property [
          sh:in (yaml)
        ];
      ]
      [
        sh:property [
          sh:in (html)
        ];
      ]
      [
        sh:property [
          sh:in (angular)
        ];
      ]
      [
        sh:property [
          sh:in (lwc)
        ];
      ]
    );
  ];
  sh:property [
    sh:path ex:pluginSearchDirs;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
      sh:datatype xsd:string;
    ];
  ];
  sh:property [
    sh:path ex:plugins;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
      sh:datatype xsd:string;
    ];
  ];
  sh:property [
    sh:path :printWidth;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :proseWrap;
    sh:xone (
      [
        sh:property [
          sh:in (always)
        ];
      ]
      [
        sh:property [
          sh:in (never)
        ];
      ]
      [
        sh:property [
          sh:in (preserve)
        ];
      ]
    );
  ];
  sh:property [
    sh:path :quoteProps;
    sh:xone (
      [
        sh:property [
          sh:in (as-needed)
        ];
      ]
      [
        sh:property [
          sh:in (consistent)
        ];
      ]
      [
        sh:property [
          sh:in (preserve)
        ];
      ]
    );
  ];
  sh:property [
    sh:path :rangeEnd;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :rangeStart;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :requirePragma;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :semi;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :singleQuote;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :tabWidth;
    sh:datatype xsd:decimal;
  ];
  sh:property [
    sh:path :trailingComma;
    sh:xone (
      [
        sh:property [
          sh:in (es5)
        ];
      ]
      [
        sh:property [
          sh:in (none)
        ];
      ]
      [
        sh:property [
          sh:in (all)
        ];
      ]
    );
  ];
  sh:property [
    sh:path :useTabs;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path :vueIndentScriptAndStyle;
    sh:datatype xsd:boolean;
  ];

ex:overridesDefinition_Shape a sh:NodeShape;
  sh:targetClass :overridesDefinition;
  sh:property [
    sh:path ex:overrides;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
      sh:datatype ex:overrides1_Shape;
    ];
  ];

ex:JS_id a sh:NodeShape;
  sh:targetClass :JS_id;
  sh:xone (
    [
      sh:property [
        sh:node ex:obj1_Shape;
      ];
    ]
    [
      sh:and (
        ex:optionsDefinition_shape
        ex:overridesDefinition_shape
      );
    ]
    [
      sh:property [
        sh:datatype xsd:string;
      ];
    ]
  );

ex:overrides1_Shape a sh:NodeShape;
  sh:targetClass :overrides1;
  sh:property [
    sh:path :files;
    sh:xone (
      [
        sh:property [
          sh:datatype xsd:string;
        ];
      ]
      [
        sh:property [
          sh:path ex:oneOf;
          sh:node dash:ListShape;
          sh:property [
            sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
            sh:datatype xsd:string;
          ];
        ];
      ]
      [
        sh:property [
          sh:path :items;
          sh:datatype xsd:string;
        ];
      ]
    );
  ];
  sh:property [
    sh:path :excludeFiles;
    sh:xone (
      [
        sh:property [
          sh:datatype xsd:string;
        ];
      ]
      [
        sh:property [
          sh:path ex:oneOf;
          sh:node dash:ListShape;
          sh:property [
            sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
            sh:datatype xsd:string;
          ];
        ];
      ]
      [
        sh:property [
          sh:path :items;
          sh:datatype xsd:string;
        ];
      ]
    );
  ];
  sh:property [
    sh:path options;
    sh:node ex:options_Shape;
  ];

ex:obj1_Shape a sh:NodeShape;
  sh:targetClass :obj1;
  sh:and (
    ex:optionsDefinition_shape
    ex:overridesDefinition_shape
  );

ex:options_Shape a sh:NodeShape;
  sh:targetClass :options;
