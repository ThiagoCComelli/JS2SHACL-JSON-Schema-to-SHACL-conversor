
ex:subschema_1_Shape a sh:NodeShape;
  sh:targetClass :subschema_1;
  sh:property [
    sh:path ex:fruits;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
      sh:datatype xsd:string;
    ];
  ];
  sh:property [
    sh:path ex:vegetables;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath redf:rest] ref:first);
    ];
  ];
  sh:property [
    sh:path ex:aloooou;
    sh:node dash:ListShape;
    sh:property [
      sh:path rdf:first;
      sh:datatype xsd:string;
    ];
    sh:property [
      sh:path (ref:rest rdf:first);
      sh:node ex:aloooou_Shape;
    ];
  ];
  sh:and (
    [
      sh:path :Nome;
      sh:node ex:subschema_1_shape;
    ]
    [
      sh:property [
        sh:path test;
        sh:datatype xsd:string;
        sh:maxLength 5;
      ];
    ]
    [
      sh:property [
        sh:path anotherTest;
        sh:datatype xsd:decimal;
        sh:minInclusive 15;
      ];
    ]
    [
      sh:property [
        sh:path aqui;
        sh:datatype xsd:string;
      ];
    ]
    [
      sh:and (
        ex:subschema_1_shape
        [
          sh:property [
            sh:path test;
            sh:datatype xsd:string;
            sh:maxLength 5;
          ];
        ]
        [
          sh:property [
            sh:path anotherTest;
            sh:datatype xsd:decimal;
            sh:minInclusive 15;
          ];
        ]
        [
          sh:property [
            sh:path aqui;
            sh:datatype xsd:string;
          ];
        ]
      );
    ]
  );
  sh:xone (
    [
      sh:path :Nome;
      sh:node ex:subschema_1_shape;
    ]
    [
      sh:property [
        sh:path test;
        sh:datatype xsd:string;
        sh:maxLength 5;
      ];
    ]
    [
      sh:property [
        sh:path anotherTest;
        sh:datatype xsd:decimal;
        sh:minInclusive 15;
      ];
    ]
  );
  sh:or (
    [
      sh:path :Nome;
      sh:node ex:subschema_1_shape;
    ]
    ex:subschema_2_shape
  );

ex:JS_id a sh:NodeShape;
  sh:targetClass :JS_id;
  sh:and (
    [
      sh:path :Nome;
      sh:node ex:subschema_1_shape;
    ]
    [
      sh:property [
        sh:path test;
        sh:datatype xsd:string;
        sh:maxLength 5;
      ];
    ]
    [
      sh:property [
        sh:path anotherTest;
        sh:datatype xsd:decimal;
        sh:minInclusive 15;
      ];
    ]
  );

ex:aloooou_Shape a sh:NodeShape;
  sh:targetClass :aloooou;
  sh:property [
    sh:path nombre;
    sh:datatype xsd:string;
  ];
  sh:property [
    sh:path naosei;
    sh:datatype xsd:decimal;
  ];
