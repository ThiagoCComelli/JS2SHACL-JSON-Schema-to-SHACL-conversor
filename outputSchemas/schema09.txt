@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ex: <http://example.org/> .

ex:proxy-schema_Shape a sh:NodeShape;
  sh:targetClass ex:proxy-schema;
  sh:property [
    sh:path ex:desc;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath rdf:rest] rdf:first);
      sh:datatype xsd:string;
    ];
  ];
  sh:property [
    sh:path ex:matchCondition;
    sh:node ex:match-condition-schema_Shape;
    sh:minCount 1;
  ];
  sh:property [
    sh:path ex:backendUri;
    sh:datatype xsd:string;
    sh:description "The URL of the backend resource to which the request should be proxied. This value may be templated. If this property is not included, Azure Functions will respond with an HTTP 200 OK";
  ];
  sh:property [
    sh:path ex:requestOverrides;
    sh:node ex:requestOverrides-schema_Shape;
  ];
  sh:property [
    sh:path ex:responseOverrides;
    sh:node ex:responseOverrides-schema_Shape;
  ];
  sh:property [
    sh:path ex:debug;
    sh:datatype xsd:boolean;
  ];
  sh:property [
    sh:path ex:disabled;
    sh:datatype xsd:boolean;
  ].

ex:match-condition-schema_Shape a sh:NodeShape;
  sh:targetClass ex:match-condition-schema;
  sh:property [
    sh:path ex:route;
    sh:datatype xsd:string;
    sh:description "Required - This defines the route template, controlling to which request URLs your proxy will respond. Unlike in HTTP triggers, there is no default value";
    sh:minCount 1;
  ];
  sh:property [
    sh:path ex:methods;
    sh:node dash:ListShape;
    sh:property [
      sh:path ([sh:zeroOrMorePath rdf:rest] rdf:first);
      sh:datatype ex:http-method-schema_Shape;
    ];
  ].

ex:requestOverrides-schema_Shape a sh:NodeShape;
  sh:targetClass ex:requestOverrides-schema;
  sh:property [
    sh:path ex:backend.request.method;
    sh:in (This is the HTTP method which will be used to call the backend.);
  ];
  sh:property [
    sh:path ex:backend.request.method;
    sh:or (
      ex:http-method-schema_shape
      ex:request-overrides-value-expression-schema_shape
    );
  ];
  sh:property [
    sh:path ex:backend.request.querystring.<ParameterName>;
    sh:node ex:request-overrides-value-expression-schema_Shape;
  ];
  sh:property [
    sh:path ex:backend.request.headers.<HeaderName>;
    sh:node ex:request-overrides-value-expression-schema_Shape;
  ].

ex:responseOverrides-schema_Shape a sh:NodeShape;
  sh:targetClass ex:responseOverrides-schema;
  sh:property [
    sh:path ex:response.statusCode;
    sh:node ex:response-overrides-value-expression-schema_Shape;
  ];
  sh:property [
    sh:path ex:response.statusReason;
    sh:node ex:response-overrides-value-expression-schema_Shape;
  ];
  sh:property [
    sh:path ex:response.body;
    sh:in (The string representation of the body to be returned to the client.);
  ];
  sh:property [
    sh:path ex:response.body;
    sh:or (
      [
        sh:property [
          sh:datatype xsd:string;
        ];
      ]
      [
        sh:property [
          sh:node ex:obj1_Shape;
        ];
      ]
    );
  ];
  sh:property [
    sh:path ex:response.headers.<HeaderName>;
    sh:node ex:response-overrides-value-expression-schema_Shape;
  ].

ex:request-overrides-value-expression-schema_Shape a sh:NodeShape;
  sh:targetClass ex:request-overrides-value-expression-schema;
  sh:property [
    sh:path ex:request-overrides-value-expression-schema;
    sh:datatype xsd:string;
  ].

ex:response-overrides-value-expression-schema_Shape a sh:NodeShape;
  sh:targetClass ex:response-overrides-value-expression-schema;
  sh:property [
    sh:path ex:response-overrides-value-expression-schema;
    sh:datatype xsd:string;
  ].

ex:http-method-schema_Shape a sh:NodeShape;
  sh:targetClass ex:http-method-schema;
  sh:property [
    sh:path ex:false;
    sh:in ("GET" "POST" "HEAD" "OPTIONS" "PUT" "TRACE" "DELETE" "PATCH" "CONNECT" );
  ];

ex:JS_id_Shape a sh:NodeShape;
  sh:targetClass ex:JS_id;
  sh:property [
    sh:path ex:$schema;
    sh:datatype xsd:string;
  ];
  sh:property [
    sh:path ex:proxies;
    sh:node ex:proxies_Shape;
    sh:minCount 1;
  ].

ex:obj1_Shape a sh:NodeShape;
  sh:targetClass ex:obj1.

ex:proxies_Shape a sh:NodeShape;
  sh:targetClass ex:proxies;
  sh:property [
    sh:path ex:<ProxyName>;
    sh:node ex:proxy-schema_Shape;
  ].
